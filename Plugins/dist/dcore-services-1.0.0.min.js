var dcore;!function(dcore){var plugins;!function(plugins){var services;!function(services){"use strict";var ServiceConfig=function(){function ServiceConfig(){this.services={}}return ServiceConfig.prototype.add=function(id,creator){if("string"!=typeof id||""===id)throw new TypeError(id+" service registration failed: ID must be non empty string.");if("function"!=typeof creator)throw new TypeError(id+" service registration failed: creator must be a function.");if(this.services[id])throw new TypeError(id+" service registration failed: a service with such id has been already added.");return this.services[id]=creator,this},ServiceConfig.prototype.get=function(id){var creator=this.services[id];if(!creator)throw new ReferenceError(id+" service was not found.");return creator()},ServiceConfig}();services.ServiceConfig=ServiceConfig}(services=plugins.services||(plugins.services={}))}(plugins=dcore.plugins||(dcore.plugins={}))}(dcore||(dcore={}));var dcore;!function(dcore){"use strict";var services=dcore.plugins.services;dcore.Instance.prototype.useServices=function(){var that=this;that.services||(that.services=new services.ServiceConfig,that.Sandbox.prototype.getService=function(id){return this.core.services.get(id)})}}(dcore||(dcore={}));